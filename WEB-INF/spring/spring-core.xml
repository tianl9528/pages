<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx-3.0.xsd 
						http://www.springframework.org/schema/jee 
						http://www.springframework.org/schema/jee/spring-jee-3.0.xsd 
						http://www.springframework.org/schema/context 
						http://www.springframework.org/schema/context/spring-context-3.0.xsd 
						http://www.springframework.org/schema/task 
						http://www.springframework.org/schema/task/spring-task-3.0.xsd"
	default-lazy-init="true">

	<description>SpringPublicInfoManager</description>


	<bean id="ViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<property name="viewClass">
			<value>org.springframework.web.servlet.view.JstlView</value>
		</property>
	</bean>


	<bean id="UrlMapping" class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
		<property name="interceptors">
			<list>
				<ref bean="openSessionInViewInterceptor"/>
			</list>
		</property> 
	</bean>
	 

	<!-- 
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		<property name="ignoreResourceNotFound" value="true" />
		<property name="locations">
			<list>
				<value>classpath*:/application.properties</value>
				<value>classpath*:/application.local.properties</value>
				<value>file:/var/myapp/application.server.properties</value>
			</list>
		</property>
	</bean>
	 -->
	 

	<context:component-scan base-package="sunit" />
	<context:annotation-config/> 
	

	<task:annotation-driven executor="timerExecutor" scheduler="timerScheduler"/>
	<task:executor id="timerExecutor" pool-size="5"/>
	<task:scheduler id="timerScheduler" pool-size="10"/>
	

	<bean id="SpringContextHolder" class="sunit.util.spring.SpringContextHolder" lazy-init="false" />
	
	
	<bean id="dataSource" class="org.logicalcobwebs.proxool.ProxoolDataSource">
		<property name="driver">
			<value>oracle.jdbc.driver.OracleDriver</value>
		</property>
		
		<!--  -->
		<property name="driverUrl">
		
		<!-- 	<value>jdbc:oracle:thin:@192.168.0.13:1522:server10</value>
			<value>jdbc:oracle:thin:@130.51.79.63:1521:gzdb2</value>-->
			<!--<value>jdbc:oracle:thin:@222.218.156.5:1521:cenyc</value> -->
			 <value>jdbc:oracle:thin:@localhost:1521:XE</value>
			<!--<value>jdbc:oracle:thin:@jshuze:1521:orcl</value>-->
		</property>
		<property name="user">
			 <value>GDZYZHY</value>
		</property>
		<property name="password">
			<value>12321</value>
		</property>
		
		<property name="alias">
			<value>server</value>
		</property>
		<property name="houseKeepingTestSql">
			<value>select CURRENT_DATE from dual</value>
		</property>
		<property name="testBeforeUse">
			<value>true</value>
		</property>
		<property name="testAfterUse">
			<value>true</value>
		</property>
		<property name="prototypeCount">
			<value>10</value>
		</property>
		<property name="maximumConnectionCount">
			<value>200</value>
		</property>
		<property name="minimumConnectionCount">
			<value>10</value>
		</property>
		<property name="simultaneousBuildThrottle">
			<value>40</value>
		</property>
		<property name="statistics">
			<value>1m,15m,1d</value>
		</property>
		<property name="statisticsLogLevel">
			<value>DEBUG</value>
		</property>
		<property name="trace">
			<value>true</value>
		</property>
		<property name="verbose">
			<value>true</value>
		</property>
		<property name="maximumActiveTime">
			<value>2400000</value>
		</property>
		<property name="jmx">
			<value>false</value>
		</property>
	</bean>
	 

	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="configLocation" value="classpath:hibernate.cfg.xml"></property>
	</bean>


	<bean id="TransactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>


	<!--
		<bean id="transactionManager" class="org.springframework.transaction.jta.JtaTransactionManager or
		WebLogicJtaTransactionManager" />
	-->
	

	<tx:annotation-driven transaction-manager="TransactionManager" proxy-target-class="true" />

	<!--Base Service(All other service inherited from this)-->
	<bean id="TransactionProxyFactoryBean" lazy-init="true"	class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager">
			<ref bean="TransactionManager" />
		</property>
		<property name="transactionAttributes">
			<props>
				<prop key="do*">PROPAGATION_REQUIRED</prop>
				<prop key="save*">PROPAGATION_REQUIRED</prop>
				<prop key="delete*">PROPAGATION_REQUIRED</prop>
				<prop key="update*">PROPAGATION_REQUIRED</prop>
				<prop key="find*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="get*">PROPAGATION_REQUIRED,readOnly</prop>
			</props>
		</property>
	</bean>

   <bean name="openSessionInViewInterceptor" class="org.springframework.orm.hibernate3.support.OpenSessionInViewInterceptor">
		<property name="sessionFactory">
			<ref local="sessionFactory"/>
		</property>
		<property name="flushMode">
			<value>1</value>
		</property>
   </bean>

	<bean id="DefaultQueryController" class="sunit.app.hibernate.controller.QueryController">
		<property name="sessionFactory">
			<ref local="sessionFactory"/>
		</property>
		<property name="searchorName">
			<value>defaultSearchor</value>
		</property>
	</bean>

	<bean id="JdbcDAO" class="sunit.database.spring.JdbcDAO">
		<property name="dataSource">
			<ref local="dataSource"/>
		</property>
	</bean>

	<bean id="BaseDAO" class="sunit.database.spring.BaseDao">
		<property name="sessionFactory">
			<ref local="sessionFactory"/>
		</property>
	</bean>

	<bean id="sendEmail" class="org.springframework.scheduling.quartz.JobDetailBean">
		<property name="jobClass">
			<value>sunit.app.push.manager.SendEmailJob</value>
		</property>
		<property name="jobDataAsMap">
			<map>
				<entry key="sse" value-ref="sse" />
			</map>
		</property>
	</bean>
	
	<bean id="sendSMS" class="org.springframework.scheduling.quartz.JobDetailBean">
		<property name="jobClass">
			<value>sunit.app.push.manager.SendSMSJob</value>
		</property>
		<property name="jobDataAsMap">
			<map>
				<entry key="sss" value-ref="sss" />
			</map>
		</property>
	</bean>
	
	
	<bean id="aiGrasp" class="org.springframework.scheduling.quartz.JobDetailBean">
		<property name="jobClass">
			<value>sunit.app.push.manager.AgrInfoGraspJob</value>
		</property>
		<property name="jobDataAsMap">
			<map>
				<entry key="ag" value-ref="ag" />
			</map>
		</property>
	</bean>
	 
	<bean id="emaltrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="sendEmail"></property>
		<property name="cronExpression">
			<value>0 0 9 * * ?</value>
		</property>
	</bean>
	
	<bean id="smstrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="sendSMS"></property>
		<property name="cronExpression">
			 <value>0 0 9 * * ?</value>
		 	<!--
				<value>10/15 * * * * ?</value>
			 -->
		</property>
	</bean>
	
	<bean id="agtrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="aiGrasp"></property>
		<property name="cronExpression">
			 <value>0 0 17 * * ?</value>
		 	 <!--
			<value>50/1500 * * * * ?</value>
			 -->
		</property>
	</bean>
	

	<bean id="startQuartz" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="emaltrigger"/>
				<ref bean="smstrigger"/>
				<!--<ref bean="agtrigger"/>-->
			</list>
		</property>
	</bean>
</beans>